name: Release

on:
  release:
    types: 
    - created
  workflow_dispatch:
jobs:

  publish-image:
    permissions:
      contents: write # Used to upload assets
      packages: write # Used to push images to `ghcr.io`
      id-token: write # Needed to create an OIDC token for keyless signing
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
        - 5000:5000
    outputs:
      image-digest: ${{ steps.image.outputs.digest }}
      kargo-repo: ${{ steps.repo.outputs.repo }}
      unstable-version: ${{ steps.unstable-version.outputs.unstable-version }}
    steps:
    - name: Determine which repository to use for images
      id: repo
      run: |
        REPO=ghcr.io/tmarback/kargo
        if ${{ github.event_name != 'release' }}
        then
          REPO=ghcr.io/tmarback/kargo-unstable
        fi
        echo "Repository is set to: $REPO"
        echo "repo=$REPO" >> $GITHUB_OUTPUT
    - name: Setup Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version: '1.23.0'
    - name: Set version for unstable builds
      id: unstable-version
      run: |
        set -xue
        # Once Kargo goes to v2, we need to replace github.com/akuity/kargo with github.com/akuity/kargo/v2 on the next line
        LATEST_VERSION=$(go list -m -versions github.com/akuity/kargo | awk '{print $NF}' | awk -F "." '{print $1"."$2".0"}')
        NEW_VERSION=$(awk 'BEGIN {FS=OFS="."} {$2++; print}' <<< "${LATEST_VERSION}")
        echo "unstable-version=${NEW_VERSION}-unstable-$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
    - name: Set up QEMU
      uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1
      with:
        driver-opts: network=host
    - name: Install Cosign
      uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0
      with:
        cosign-release: 'v2.2.1' # optional
    - name: Login to GHCR
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.repo.outputs.repo }}
        flavor: latest=false
        tags: |
          type=semver,pattern={{raw}}
          type=raw,value=${{ steps.unstable-version.outputs.unstable-version }},enable=${{ github.event_name != 'release'}}
    - name: Build base image
      run: |
        BASE_IMAGE=localhost:5000/kargo-base make build-base-image
        docker push localhost:5000/kargo-base:latest-arm64
        docker push localhost:5000/kargo-base:latest-amd64
    - name: Build and push final image
      id: image
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        build-args: |
          BASE_IMAGE=localhost:5000/kargo-base
          VERSION=${{ github.ref_name }}
          GIT_COMMIT=${{ github.sha }}
          GIT_TREE_STATE=clean
        tags: ${{ steps.meta.outputs.tags }}
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: false
        sbom: false
    - name: Sign image
      run: |
          cosign sign \
          -a "repo=${{ github.repository }}" \
          -a "workflow=${{ github.workflow }}" \
          -a "sha=${{ github.sha }}" \
          --yes \
          ${{ steps.repo.outputs.repo}}@${{ steps.image.outputs.digest}}
    - name: Publish SBOM
      if: github.event_name == 'release'
      uses: anchore/sbom-action@v0
      with:
        image: ${{ steps.meta.outputs.tags }}
